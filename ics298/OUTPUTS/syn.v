
// Generated by Cadence Genus(TM) Synthesis Solution 21.14-s082_1
// Generated on: Feb 20 2025 00:20:20 EST (Feb 20 2025 05:20:20 UTC)

// Verification Directory fv/s298 

module s298(GND, VDD, CK, G0, G1, G117, G118, G132, G133, G2, G66, G67,
     SE);
  input GND, VDD, CK, G0, G1, G2, SE;
  output G117, G118, G132, G133, G66, G67;
  wire GND, VDD, CK, G0, G1, G2, SE;
  wire G117, G118, G132, G133, G66, G67;
  wire G10, G11, G12, G13, G14, G15, G22, G23;
  wire n_15, n_18, n_28, n_37, n_39, n_54, n_55, n_62;
  wire n_64, n_67, n_80, n_93, n_99, n_112, n_121, n_125;
  wire n_128, n_130, n_132, n_133, n_134, n_137, n_138, n_139;
  wire n_140, n_141, n_142, n_143, n_144, n_147, n_150, n_155;
  wire n_156, n_161, n_162, n_167, n_171, n_178, n_179, n_180;
  wire n_189, n_190, n_191, n_192, n_197, n_198, n_201, n_208;
  wire n_209, n_210, n_213, n_220, n_221, n_222, n_227, n_228;
  wire n_237, n_238, n_239, n_240, n_245, n_246, n_253, n_254;
  wire n_255, n_260, n_261, n_265, n_266, n_267, n_268, n_269;
  wire n_270, n_271, n_272, n_273, n_274, n_275, n_276, n_277;
  wire n_278;
  CDN_flop DFF_0_q_reg(.clk (CK), .d (n_278), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G10));
  CDN_flop DFF_1_q_reg(.clk (CK), .d (n_93), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G11));
  CDN_flop DFF_2_q_reg(.clk (CK), .d (n_269), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G12));
  CDN_flop DFF_3_q_reg(.clk (CK), .d (n_28), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G13));
  CDN_flop DFF_4_q_reg(.clk (CK), .d (n_266), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G14));
  CDN_flop DFF_5_q_reg(.clk (CK), .d (n_265), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G15));
  CDN_flop DFF_6_q_reg(.clk (CK), .d (n_99), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G66));
  CDN_flop DFF_7_q_reg(.clk (CK), .d (n_80), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G67));
  CDN_flop DFF_8_q_reg(.clk (CK), .d (n_39), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G117));
  CDN_flop DFF_9_q_reg(.clk (CK), .d (n_55), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G118));
  CDN_flop DFF_10_q_reg(.clk (CK), .d (n_64), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G132));
  CDN_flop DFF_11_q_reg(.clk (CK), .d (n_67), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G133));
  CDN_flop DFF_12_q_reg(.clk (CK), .d (n_273), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G22));
  CDN_flop DFF_13_q_reg(.clk (CK), .d (n_272), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G23));
  or g96 (n_18, wc, G12);
  not gc (wc, G13);
  nand g352 (n_121, G10, G11);
  or g434 (n_134, G13, G12);
  or g441 (n_133, wc0, G11);
  not gc0 (wc0, G22);
  or g463 (n_142, G12, n_133);
  or g542 (n_64, wc1, n_221);
  not gc1 (wc1, n_222);
  nand g543 (n_28, n_227, n_228);
  or g544 (n_222, G10, wc2);
  not gc2 (wc2, n_62);
  or g547 (n_227, wc3, G0);
  not gc3 (wc3, n_138);
  or g548 (n_55, n_240, n_54);
  or g551 (n_80, wc4, n_192);
  not gc4 (wc4, n_191);
  nand g552 (n_138, n_197, n_198);
  or g553 (n_39, wc5, n_261);
  not gc5 (wc5, n_260);
  nand g554 (n_62, n_209, n_210);
  or g555 (n_240, wc6, n_239);
  not gc6 (wc6, n_238);
  or g556 (n_99, n_54, wc7);
  not gc7 (wc7, n_213);
  nand g557 (n_209, G15, n_128);
  nand g558 (n_93, n_254, n_255);
  nand g559 (n_239, n_237, n_132);
  nand g560 (n_197, n_137, G12);
  nand g561 (n_54, n_246, n_128);
  nand g562 (n_261, n_130, n_190);
  or g563 (n_267, wc8, n_125);
  not gc8 (wc8, G14);
  or g564 (n_268, G14, wc9);
  not gc9 (wc9, n_125);
  nand g565 (n_143, n_267, n_268);
  nand g566 (n_221, n_132, n_220);
  nand g567 (n_192, n_189, n_190);
  nand g568 (n_67, n_179, n_180);
  or g569 (n_210, n_18, n_208);
  or g570 (n_246, n_245, wc10);
  not gc10 (wc10, n_142);
  or g571 (n_238, wc11, n_37);
  not gc11 (wc11, G118);
  or g572 (n_213, wc12, n_37);
  not gc12 (wc12, G66);
  or g573 (n_132, n_201, n_112);
  or g574 (n_237, G10, wc13);
  not gc13 (wc13, n_141);
  or g577 (n_255, n_253, G0);
  or g578 (n_260, wc14, n_37);
  not gc14 (wc14, G117);
  or g579 (n_128, n_198, n_167);
  or g580 (n_190, wc15, n_112);
  not gc15 (wc15, G11);
  or g581 (n_191, wc16, n_37);
  not gc16 (wc16, G67);
  or g582 (n_189, G11, n_130);
  or g583 (n_125, G23, wc17);
  not gc17 (wc17, n_156);
  or g584 (n_180, n_178, n_130);
  nand g585 (n_137, n_161, n_162);
  or g586 (n_179, wc18, n_37);
  not gc18 (wc18, G133);
  or g587 (n_220, wc19, n_37);
  not gc19 (wc19, G132);
  or g588 (n_37, n_171, wc20);
  not gc20 (wc20, n_134);
  or g589 (n_208, G14, n_133);
  or g590 (n_161, G13, n_121);
  or g591 (n_130, G14, n_150);
  or g592 (n_245, G15, n_147);
  or g593 (n_141, G15, wc21);
  not gc21 (wc21, n_147);
  or g594 (n_112, n_134, G15);
  or g595 (n_228, wc22, n_15);
  not gc22 (wc22, G13);
  nand g596 (n_270, G12, n_121);
  or g597 (n_271, G12, n_121);
  nand g598 (n_144, n_270, n_271);
  or g599 (n_254, wc23, n_15);
  not gc23 (wc23, G11);
  or g600 (n_253, n_155, wc24);
  not gc24 (wc24, n_18);
  or g601 (n_198, wc25, n_18);
  not gc25 (wc25, G11);
  or g602 (n_156, n_18, n_155);
  or g607 (n_274, wc26, G2);
  not gc26 (wc26, G22);
  or g608 (n_275, G22, wc27);
  not gc27 (wc27, G2);
  nand g609 (n_140, n_274, n_275);
  or g610 (n_276, wc28, G1);
  not gc28 (wc28, G23);
  or g611 (n_277, G23, wc29);
  not gc29 (wc29, G1);
  nand g612 (n_139, n_276, n_277);
  or g613 (n_155, wc30, G11);
  not gc30 (wc30, G10);
  or g614 (n_15, G0, G10);
  not g615 (n_278, n_15);
  or g616 (n_147, wc31, G14);
  not gc31 (wc31, G13);
  or g617 (n_150, G13, G15);
  or g618 (n_162, G11, wc32);
  not gc32 (wc32, G13);
  or g619 (n_171, wc33, G15);
  not gc33 (wc33, G14);
  nand g620 (n_178, G12, G11);
  or g621 (n_201, G11, wc34);
  not gc34 (wc34, G14);
  or g622 (n_167, G22, G14);
  and g623 (n_272, wc35, n_139);
  not gc35 (wc35, G0);
  and g624 (n_273, wc36, n_140);
  not gc36 (wc36, G0);
  and g625 (n_269, wc37, n_144);
  not gc37 (wc37, G0);
  and g626 (n_265, wc38, n_62);
  not gc38 (wc38, G0);
  and g627 (n_266, wc39, n_143);
  not gc39 (wc39, G0);
endmodule

`ifdef RC_CDN_GENERIC_GATE
`else
module CDN_flop(clk, d, sena, aclr, apre, srl, srd, q);
  input clk, d, sena, aclr, apre, srl, srd;
  output q;
  wire clk, d, sena, aclr, apre, srl, srd;
  wire q;
  reg  qi;
  assign #1 q = qi;
  always 
    @(posedge clk or posedge apre or posedge aclr) 
      if (aclr) 
        qi <= 0;
      else if (apre) 
          qi <= 1;
        else if (srl) 
            qi <= srd;
          else begin
            if (sena) 
              qi <= d;
          end
  initial 
    qi <= 1'b0;
endmodule
`endif
