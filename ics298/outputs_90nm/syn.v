
// Generated by Cadence Genus(TM) Synthesis Solution 21.14-s082_1
// Generated on: Feb 13 2025 12:14:54 IST (Feb 13 2025 06:44:54 UTC)

// Verification Directory fv/s298 

module s298(GND, VDD, CK, G0, G1, G117, G118, G132, G133, G2, G66, G67,
     scan_in, scan_out);
  input GND, VDD, CK, G0, G1, G2, scan_in;
  output G117, G118, G132, G133, G66, G67, scan_out;
  wire GND, VDD, CK, G0, G1, G2, scan_in;
  wire G117, G118, G132, G133, G66, G67, scan_out;
  wire G10, G11, G12, G13, G14, G15, G22, G23;
  wire n_15, n_18, n_23, n_28, n_30, n_34, n_37, n_39;
  wire n_47, n_54, n_55, n_62, n_64, n_67, n_71, n_80;
  wire n_93, n_99, n_105, n_106, n_112, n_113, n_114, n_115;
  wire n_116, n_117, n_118, n_119, n_120, n_121, n_124, n_129;
  wire n_130, n_135, n_136, n_144, n_145, n_148, n_153, n_154;
  wire n_161, n_162, n_163, n_172, n_173, n_174, n_175, n_182;
  wire n_183, n_184, n_189, n_190, n_197, n_198, n_199, n_202;
  wire n_207, n_208, n_217, n_218, n_219, n_220, n_227, n_228;
  wire n_229, n_236, n_237, n_238, n_245, n_246, n_247, n_251;
  wire n_252, n_253, n_254, n_255, n_256, n_257, n_258, n_259;
  wire n_260, n_261, n_262, n_263, n_264;
  CDN_flop DFF_0_q_reg(.clk (CK), .d (n_264), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G10));
  CDN_flop DFF_1_q_reg(.clk (CK), .d (n_93), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G11));
  CDN_flop DFF_2_q_reg(.clk (CK), .d (n_255), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G12));
  CDN_flop DFF_3_q_reg(.clk (CK), .d (n_28), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G13));
  CDN_flop DFF_4_q_reg(.clk (CK), .d (n_252), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G14));
  CDN_flop DFF_5_q_reg(.clk (CK), .d (n_251), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G15));
  CDN_flop DFF_6_q_reg(.clk (CK), .d (n_99), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G66));
  CDN_flop DFF_7_q_reg(.clk (CK), .d (n_80), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G67));
  CDN_flop DFF_8_q_reg(.clk (CK), .d (n_39), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G117));
  CDN_flop DFF_9_q_reg(.clk (CK), .d (n_55), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G118));
  CDN_flop DFF_10_q_reg(.clk (CK), .d (n_64), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G132));
  CDN_flop DFF_11_q_reg(.clk (CK), .d (n_67), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G133));
  CDN_flop DFF_12_q_reg(.clk (CK), .d (n_256), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G22));
  CDN_flop DFF_13_q_reg(.clk (CK), .d (n_259), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G23));
  or g28 (n_30, G13, G12);
  or g96 (n_18, wc, G12);
  not gc (wc, G13);
  nand g98 (n_23, G10, G11);
  or g104 (n_47, G14, wc0);
  not gc0 (wc0, G11);
  or g280 (n_118, G12, wc1);
  not gc1 (wc1, G22);
  nand g366 (n_28, n_207, n_208);
  or g367 (n_64, wc2, n_198);
  not gc2 (wc2, n_199);
  or g368 (n_99, n_54, wc3);
  not gc3 (wc3, n_202);
  or g371 (n_55, n_220, n_54);
  or g372 (n_207, wc4, G0);
  not gc4 (wc4, n_113);
  or g373 (n_199, G10, wc5);
  not gc5 (wc5, n_62);
  nand g374 (n_113, n_189, n_190);
  nand g377 (n_54, n_228, n_229);
  or g378 (n_220, wc6, n_219);
  not gc6 (wc6, n_218);
  nand g379 (n_62, n_246, n_247);
  nand g380 (n_246, n_116, G15);
  or g381 (n_39, wc7, n_183);
  not gc7 (wc7, n_184);
  or g382 (n_80, wc8, n_174);
  not gc8 (wc8, n_175);
  nand g383 (n_93, n_237, n_238);
  nand g384 (n_189, n_112, G12);
  or g385 (n_253, wc9, n_71);
  not gc9 (wc9, G14);
  or g386 (n_254, G14, wc10);
  not gc10 (wc10, n_71);
  nand g387 (n_120, n_253, n_254);
  or g388 (n_228, n_47, wc11);
  not gc11 (wc11, n_119);
  nand g389 (n_219, n_217, n_106);
  nand g390 (n_67, n_162, n_163);
  nand g391 (n_198, n_106, n_197);
  or g392 (n_202, wc12, n_37);
  not gc12 (wc12, G66);
  or g393 (n_229, n_124, n_227);
  or g396 (n_197, wc13, n_37);
  not gc13 (wc13, G132);
  or g397 (n_218, wc14, n_37);
  not gc14 (wc14, G118);
  or g398 (n_247, n_18, n_245);
  or g399 (n_217, G10, wc15);
  not gc15 (wc15, n_117);
  nand g400 (n_183, n_182, n_105);
  nand g401 (n_112, n_135, n_136);
  or g402 (n_184, wc16, n_37);
  not gc16 (wc16, G117);
  nand g403 (n_174, n_173, n_105);
  nand g404 (n_119, n_144, n_145);
  or g405 (n_116, n_47, n_145);
  or g406 (n_238, n_236, G0);
  or g407 (n_175, wc17, n_37);
  not gc17 (wc17, G67);
  or g408 (n_71, G23, wc18);
  not gc18 (wc18, n_130);
  or g409 (n_163, n_47, n_161);
  or g410 (n_106, n_30, n_154);
  or g411 (n_162, wc19, n_37);
  not gc19 (wc19, G133);
  or g412 (n_37, n_153, wc20);
  not gc20 (wc20, n_30);
  or g413 (n_154, G11, n_153);
  or g414 (n_161, wc21, n_34);
  not gc21 (wc21, G12);
  or g415 (n_173, n_172, n_34);
  or g416 (n_245, wc22, n_172);
  not gc22 (wc22, G22);
  or g417 (n_105, n_30, n_148);
  or g420 (n_135, G13, n_23);
  or g421 (n_117, G15, wc23);
  not gc23 (wc23, n_124);
  or g422 (n_190, wc24, n_18);
  not gc24 (wc24, G11);
  or g423 (n_227, G15, wc25);
  not gc25 (wc25, n_118);
  nand g424 (n_257, G12, n_23);
  or g425 (n_258, G12, n_23);
  nand g426 (n_121, n_257, n_258);
  or g427 (n_208, wc26, n_15);
  not gc26 (wc26, G13);
  or g428 (n_237, wc27, n_15);
  not gc27 (wc27, G11);
  or g429 (n_236, n_129, wc28);
  not gc28 (wc28, n_18);
  or g430 (n_130, n_18, n_129);
  or g431 (n_145, G22, n_18);
  or g434 (n_182, G14, n_34);
  or g435 (n_260, wc29, G2);
  not gc29 (wc29, G22);
  or g436 (n_261, G22, wc30);
  not gc30 (wc30, G2);
  nand g437 (n_115, n_260, n_261);
  or g438 (n_262, wc31, G1);
  not gc31 (wc31, G23);
  or g439 (n_263, G23, wc32);
  not gc32 (wc32, G1);
  nand g440 (n_114, n_262, n_263);
  or g441 (n_129, wc33, G11);
  not gc33 (wc33, G10);
  or g442 (n_124, wc34, G14);
  not gc34 (wc34, G13);
  or g443 (n_136, G11, wc35);
  not gc35 (wc35, G13);
  or g444 (n_172, G14, G11);
  or g445 (n_144, wc36, G15);
  not gc36 (wc36, G13);
  or g446 (n_153, wc37, G15);
  not gc37 (wc37, G14);
  or g447 (n_148, wc38, G15);
  not gc38 (wc38, G11);
  or g448 (n_34, G13, G15);
  or g449 (n_15, G10, G0);
  not g450 (n_264, n_15);
  and g451 (n_256, wc39, n_115);
  not gc39 (wc39, G0);
  and g452 (n_259, wc40, n_114);
  not gc40 (wc40, G0);
  and g453 (n_255, wc41, n_121);
  not gc41 (wc41, G0);
  and g454 (n_251, wc42, n_62);
  not gc42 (wc42, G0);
  and g455 (n_252, wc43, n_120);
  not gc43 (wc43, G0);
endmodule

`ifdef RC_CDN_GENERIC_GATE
`else
module CDN_flop(clk, d, sena, aclr, apre, srl, srd, q);
  input clk, d, sena, aclr, apre, srl, srd;
  output q;
  wire clk, d, sena, aclr, apre, srl, srd;
  wire q;
  reg  qi;
  assign #1 q = qi;
  always 
    @(posedge clk or posedge apre or posedge aclr) 
      if (aclr) 
        qi <= 0;
      else if (apre) 
          qi <= 1;
        else if (srl) 
            qi <= srd;
          else begin
            if (sena) 
              qi <= d;
          end
  initial 
    qi <= 1'b0;
endmodule
`endif
