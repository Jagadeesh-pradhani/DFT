
// Generated by Cadence Genus(TM) Synthesis Solution 21.14-s082_1
// Generated on: Feb 13 2025 10:09:47 IST (Feb 13 2025 04:39:47 UTC)

// Verification Directory fv/s298 

module s298(GND, VDD, CK, G0, G1, G117, G118, G132, G133, G2, G66, G67);
  input GND, VDD, CK, G0, G1, G2;
  output G117, G118, G132, G133, G66, G67;
  wire GND, VDD, CK, G0, G1, G2;
  wire G117, G118, G132, G133, G66, G67;
  wire G10, G11, G12, G13, G14, G15, G22, G23;
  wire n_15, n_18, n_23, n_28, n_30, n_34, n_37, n_39;
  wire n_47, n_54, n_55, n_62, n_64, n_67, n_71, n_80;
  wire n_93, n_99, n_105, n_106, n_112, n_113, n_114, n_115;
  wire n_116, n_117, n_118, n_119, n_120, n_121, n_124, n_129;
  wire n_130, n_135, n_136, n_141, n_142, n_145, n_150, n_151;
  wire n_158, n_159, n_160, n_169, n_170, n_171, n_172, n_179;
  wire n_180, n_181, n_186, n_187, n_194, n_195, n_196, n_199;
  wire n_208, n_209, n_210, n_211, n_216, n_217, n_224, n_225;
  wire n_226, n_233, n_234, n_235, n_242, n_243, n_244, n_247;
  wire n_248, n_249, n_250, n_251, n_252, n_253, n_254, n_255;
  wire n_256, n_257, n_258, n_259, n_260;
  CDN_flop DFF_0_q_reg(.clk (CK), .d (n_260), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G10));
  CDN_flop DFF_1_q_reg(.clk (CK), .d (n_93), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G11));
  CDN_flop DFF_2_q_reg(.clk (CK), .d (n_251), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G12));
  CDN_flop DFF_3_q_reg(.clk (CK), .d (n_28), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G13));
  CDN_flop DFF_4_q_reg(.clk (CK), .d (n_248), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G14));
  CDN_flop DFF_5_q_reg(.clk (CK), .d (n_247), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G15));
  CDN_flop DFF_6_q_reg(.clk (CK), .d (n_99), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G66));
  CDN_flop DFF_7_q_reg(.clk (CK), .d (n_80), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G67));
  CDN_flop DFF_8_q_reg(.clk (CK), .d (n_39), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G117));
  CDN_flop DFF_9_q_reg(.clk (CK), .d (n_55), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G118));
  CDN_flop DFF_10_q_reg(.clk (CK), .d (n_64), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G132));
  CDN_flop DFF_11_q_reg(.clk (CK), .d (n_67), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G133));
  CDN_flop DFF_12_q_reg(.clk (CK), .d (n_253), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G22));
  CDN_flop DFF_13_q_reg(.clk (CK), .d (n_252), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G23));
  or g28 (n_30, G13, G12);
  or g96 (n_18, wc, G12);
  not gc (wc, G13);
  nand g98 (n_23, G10, G11);
  or g104 (n_47, G14, wc0);
  not gc0 (wc0, G11);
  or g270 (n_113, G12, wc1);
  not gc1 (wc1, G22);
  nand g354 (n_28, n_216, n_217);
  or g355 (n_64, n_195, wc2);
  not gc2 (wc2, n_196);
  or g356 (n_196, G10, wc3);
  not gc3 (wc3, n_62);
  or g357 (n_99, n_54, wc4);
  not gc4 (wc4, n_199);
  or g358 (n_216, wc5, G0);
  not gc5 (wc5, n_118);
  or g361 (n_55, n_211, n_54);
  nand g364 (n_118, n_186, n_187);
  nand g365 (n_62, n_243, n_244);
  or g366 (n_211, wc6, n_210);
  not gc6 (wc6, n_209);
  nand g367 (n_54, n_225, n_226);
  nand g368 (n_67, n_159, n_160);
  nand g369 (n_243, n_115, G15);
  nand g370 (n_195, n_106, n_194);
  nand g371 (n_210, n_208, n_106);
  or g372 (n_80, n_171, wc7);
  not gc7 (wc7, n_172);
  or g373 (n_39, n_180, wc8);
  not gc8 (wc8, n_181);
  nand g374 (n_93, n_234, n_235);
  nand g375 (n_186, n_117, G12);
  or g376 (n_225, wc9, n_47);
  not gc9 (wc9, n_114);
  or g377 (n_249, wc10, n_71);
  not gc10 (wc10, G14);
  or g378 (n_250, G14, wc11);
  not gc11 (wc11, n_71);
  nand g379 (n_116, n_249, n_250);
  or g380 (n_194, wc12, n_37);
  not gc12 (wc12, G132);
  or g381 (n_199, wc13, n_37);
  not gc13 (wc13, G66);
  or g382 (n_115, n_136, n_47);
  or g383 (n_244, n_18, n_242);
  or g384 (n_226, n_124, n_224);
  nand g385 (n_180, n_179, n_105);
  or g388 (n_71, G23, wc14);
  not gc14 (wc14, n_130);
  or g389 (n_208, wc15, G10);
  not gc15 (wc15, n_112);
  nand g390 (n_171, n_170, n_105);
  nand g391 (n_117, n_141, n_142);
  or g392 (n_172, wc16, n_37);
  not gc16 (wc16, G67);
  or g393 (n_209, wc17, n_37);
  not gc17 (wc17, G118);
  or g394 (n_160, n_47, n_158);
  or g395 (n_181, wc18, n_37);
  not gc18 (wc18, G117);
  or g396 (n_159, wc19, n_37);
  not gc19 (wc19, G133);
  or g397 (n_235, wc20, n_233);
  not gc20 (wc20, n_18);
  or g398 (n_106, n_30, n_151);
  nand g399 (n_114, n_135, n_136);
  or g400 (n_187, wc21, n_18);
  not gc21 (wc21, G11);
  or g401 (n_224, G15, wc22);
  not gc22 (wc22, n_113);
  or g402 (n_179, G14, n_34);
  or g403 (n_170, n_169, n_34);
  or g404 (n_158, wc23, n_34);
  not gc23 (wc23, G12);
  or g405 (n_37, n_150, wc24);
  not gc24 (wc24, n_30);
  or g406 (n_151, G11, n_150);
  or g407 (n_105, n_145, n_30);
  or g408 (n_217, wc25, n_15);
  not gc25 (wc25, G13);
  or g409 (n_136, G22, n_18);
  or g410 (n_141, G13, n_23);
  or g411 (n_112, G15, wc26);
  not gc26 (wc26, n_124);
  or g412 (n_234, wc27, n_15);
  not gc27 (wc27, G11);
  or g415 (n_233, G0, n_129);
  or g418 (n_130, n_129, n_18);
  nand g419 (n_254, G12, n_23);
  or g420 (n_255, G12, n_23);
  nand g421 (n_119, n_254, n_255);
  or g422 (n_242, wc28, n_169);
  not gc28 (wc28, G22);
  or g423 (n_129, wc29, G11);
  not gc29 (wc29, G10);
  or g424 (n_256, wc30, G2);
  not gc30 (wc30, G22);
  or g425 (n_257, G22, wc31);
  not gc31 (wc31, G2);
  nand g426 (n_120, n_256, n_257);
  or g427 (n_258, wc32, G1);
  not gc32 (wc32, G23);
  or g428 (n_259, G23, wc33);
  not gc33 (wc33, G1);
  nand g429 (n_121, n_258, n_259);
  or g430 (n_124, wc34, G14);
  not gc34 (wc34, G13);
  or g431 (n_135, wc35, G15);
  not gc35 (wc35, G13);
  or g432 (n_169, G14, G11);
  or g433 (n_142, G11, wc36);
  not gc36 (wc36, G13);
  or g434 (n_145, G15, wc37);
  not gc37 (wc37, G11);
  or g435 (n_150, wc38, G15);
  not gc38 (wc38, G14);
  or g436 (n_34, G13, G15);
  or g437 (n_15, G10, G0);
  not g438 (n_260, n_15);
  and g439 (n_252, wc39, n_121);
  not gc39 (wc39, G0);
  and g440 (n_253, wc40, n_120);
  not gc40 (wc40, G0);
  and g441 (n_251, wc41, n_119);
  not gc41 (wc41, G0);
  and g442 (n_247, wc42, n_62);
  not gc42 (wc42, G0);
  and g443 (n_248, wc43, n_116);
  not gc43 (wc43, G0);
endmodule

`ifdef RC_CDN_GENERIC_GATE
`else
module CDN_flop(clk, d, sena, aclr, apre, srl, srd, q);
  input clk, d, sena, aclr, apre, srl, srd;
  output q;
  wire clk, d, sena, aclr, apre, srl, srd;
  wire q;
  reg  qi;
  assign #1 q = qi;
  always 
    @(posedge clk or posedge apre or posedge aclr) 
      if (aclr) 
        qi <= 0;
      else if (apre) 
          qi <= 1;
        else if (srl) 
            qi <= srd;
          else begin
            if (sena) 
              qi <= d;
          end
  initial 
    qi <= 1'b0;
endmodule
`endif
