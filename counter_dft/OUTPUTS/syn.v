
// Generated by Cadence Genus(TM) Synthesis Solution 21.14-s082_1
// Generated on: Feb 19 2025 23:44:05 EST (Feb 20 2025 04:44:05 UTC)

// Verification Directory fv/counter 

module counter(clk, reset, enable, count, SE);
  input clk, reset, enable, SE;
  output [3:0] count;
  wire clk, reset, enable, SE;
  wire [3:0] count;
  wire n_8, n_9, n_10, n_11, n_21, n_27, n_28, n_29;
  wire n_30, n_31, n_32, n_33;
  CDN_flop \count_reg[0] (.clk (clk), .d (n_8), .sena (enable), .aclr
       (reset), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (count[0]));
  CDN_flop \count_reg[1] (.clk (clk), .d (n_9), .sena (enable), .aclr
       (reset), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (count[1]));
  CDN_flop \count_reg[2] (.clk (clk), .d (n_10), .sena (enable), .aclr
       (reset), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (count[2]));
  CDN_flop \count_reg[3] (.clk (clk), .d (n_11), .sena (enable), .aclr
       (reset), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (count[3]));
  not g15 (n_8, count[0]);
  nand g28 (n_28, n_27, count[3]);
  or g29 (n_29, n_27, count[3]);
  nand g30 (n_11, n_28, n_29);
  nand g31 (n_30, count[2], n_21);
  or g32 (n_31, count[2], n_21);
  nand g33 (n_10, n_30, n_31);
  or g34 (n_27, wc, n_21);
  not gc (wc, count[2]);
  nand g35 (n_21, count[1], count[0]);
  or g36 (n_32, wc0, count[0]);
  not gc0 (wc0, count[1]);
  or g37 (n_33, count[1], wc1);
  not gc1 (wc1, count[0]);
  nand g38 (n_9, n_32, n_33);
endmodule

`ifdef RC_CDN_GENERIC_GATE
`else
module CDN_flop(clk, d, sena, aclr, apre, srl, srd, q);
  input clk, d, sena, aclr, apre, srl, srd;
  output q;
  wire clk, d, sena, aclr, apre, srl, srd;
  wire q;
  reg  qi;
  assign #1 q = qi;
  always 
    @(posedge clk or posedge apre or posedge aclr) 
      if (aclr) 
        qi <= 0;
      else if (apre) 
          qi <= 1;
        else if (srl) 
            qi <= srd;
          else begin
            if (sena) 
              qi <= d;
          end
  initial 
    qi <= 1'b0;
endmodule
`endif
